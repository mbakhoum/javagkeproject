pipeline {
    agent any
    environment {
        PROJECT_ID = 'cicd-javaapp'
        CLUSTER_NAME = 'javacluster'
        LOCATION = 'us-central1-c'
        NAMESPACE = 'testpipeline'
    }
     stages {
        stage('Deploy to GKE') {
            steps{
                step([
                $class: 'KubernetesEngineBuilder',
                projectId: env.PROJECT_ID,
                clusterName: env.CLUSTER_NAME,
                location: env.LOCATION,
                manifestPattern: 'manifest.yaml',
                credentialsId: "CICD-JavaApp",
                verifyDeployments: true])
            }
        }
    }
}
========================
pipeline {
    agent any
    node {
      stage('List pods') {
        withKubeConfig([credentialsId: 'jenkinstokengke',
                    serverUrl: 'https://34.28.156.24',
                    clusterName: 'javacluster',
                    namespace: 'default'
                    ]) {
      sh 'kubectl get pods'
        }
    }
  } 
}
============================
pipeline {
    agent any
    environment {
        PROJECT_ID = 'cicd-javaapp'
        CLUSTER_NAME = 'javacluster'
        LOCATION = 'us-central1-c'
        CREDENTIALS_ID = 'jenkinstokengke'
        NAMESPACE = 'testpipeline'
    }
    stages {
        stage('Print Credential'){
            steps {
               echo "Building Project ${env.PROJECT_ID} ..."
               sh 'chmod +x build.sh'
               withCredentials([string(credentialsId: 'sample-credential', variable: 'API_KEY')]) {
                  sh '''
                     ./build.sh
                  '''
               }
            }
        }
        stage('Deploy to GKE') {
            steps{
                step(
                    withKubeConfig([credentialsId: env.CREDENTIALS_ID,
                    clusterName: env.CLUSTER_NAME,
                    namespace: env.NAMESPACE
                    ]) {
                   sh 'curl -LO "https://storage.googleapis.com/kubernetes-release/release/v1.20.5/bin/linux/amd64/kubectl"'  
                   sh 'chmod u+x ./kubectl'  
                   sh './kubectl apply -f nginx.yaml'
             
                  }
                )
            }
     }
  }
}
==================
pipeline {
    agent any
    environment {
        PROJECT_ID = 'cicd-javaapp'
        CLUSTER_NAME = 'javacluster'
        ZONE = 'us-central1-c'
        APP_NAME = 'test'
        CONTAINER_NAME = 'dockertest'
        IMAGE_TAG = "latest"
    }
    stages {
        stage('Deploy to GKE') {
            steps {
                script {
                    withCredentials([gcpServiceAccount(credentialsId: 'jenkinstokengke', project: "${PROJECT_ID}")]) {
                        sh "gcloud container clusters get-credentials ${CLUSTER_NAME} --zone ${ZONE} --project ${PROJECT_ID}"
                        sh "kubectl set image deployment/${APP_NAME} ${CONTAINER_NAME}=gcr.io/${PROJECT_ID}/${CONTAINER_NAME}:${IMAGE_TAG}"
                    }
                }
            }
        }
    }
}
